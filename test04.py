# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mplWidgetUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from matplotlib.backends.backend_qt5agg import (NavigationToolbar2QT as NavigationToolbar) 
import numpy as np
import random


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.btn_Generate = QtWidgets.QPushButton(self.centralwidget)
        self.btn_Generate.setGeometry(QtCore.QRect(170, 30, 371, 81))
        
        self.btn_Generate.setObjectName("btn_Generate")

        self.setWindowTitle("PyQt5 & MatplotLib Example GUI")
        self.btn_Generate.clicked.connect(self.update_graph)
        self.addToolBar(NavigationToolbar(self.MplWidget.canvas, self))


        self.MplWidget = MplWidget(self.centralwidget)
        self.MplWidget.setGeometry(QtCore.QRect(30, 140, 641, 411))
        self.MplWidget.setObjectName("MplWidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def update_graph(self):  #그래프 함수 만들기. 
        fs = 500
        f = random.randint(1,100)
        ts = 1/fs
        length_of_signal = 100
        t = np.linspace(0,1, length_of_signal)

        
        cosine_signal = np.cos(2*np.pi*f*t)
        sin_signal = np.sin(2*np.pi*f*t)

        self.MplWidget.canvas.axes.clear()
        self.MplWidget.canvas.axes.plot(t, cosine_signal)#cosine함수 그래프
        self.MplWidget.canvas.axes.plot(t, sin_signal)  #sin함수 그래프 
        self.MplWidget.canvas.axes.legend(('cosinus','sinus'), loc = 'upper right')
        self.MplWidget.canvas.axes.set_title('Cosinus - Sinus Signal')  # cos 함수 와 sin함수의 차이 그래프 그리기. 
        self.MplWidget.canvas.draw()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.btn_Generate.setText(_translate("MainWindow", "Generate Random Signal"))

from mplwidget import MplWidget


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
